
##############################################
# Fetch the default VPC and All Subnets 
##############################################
data "aws_vpc" "main" {
  default = true
}

data "aws_subnets" "private" {
   filter {
	name = "vpc-id"
	values = [data.aws_vpc.main.id]
   }
}

# Route Table for Private Subnets
resource "aws_route_table" "private" {
  vpc_id = data.aws_vpc.main.id
  tags = {
    Name = "private-route-table"
  }
}

# Associate Route Table with Subnets
resource "aws_route_table_association" "private" {
  count          = length(data.aws_subnets.private.ids)
  subnet_id      = element(data.aws_subnets.private.ids, count.index)
  route_table_id = aws_route_table.private.id
}


##############################################
# Create a Security Group for Fargate Tasks and 
# task has to access outside internet
##############################################

# Security Group for VPC Endpoints
resource "aws_security_group" "fargate_sg" {
  name        = "vpc-fargate-sg"
  description = "Security group for fargate task endpoints"
  vpc_id      = data.aws_vpc.main.id

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = [data.aws_vpc.main.cidr_block]
    description = "Allow HTTPS from VPC"
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
    description = "Allow all outbound traffic"
  }

  tags = { Name = "vpc-fargate-sg" }
}

# Interface VPC Endpoints for ECR
resource "aws_vpc_endpoint" "ecr_api" {
  vpc_id              = data.aws_vpc.main.id
  service_name        = "com.amazonaws.${var.region}.ecr.api"
  vpc_endpoint_type   = "Interface"
  subnet_ids          = aws_subnets.private.ids
  security_group_ids  = [aws_security_group.endpoint_sg.id]
  private_dns_enabled = true

  tags = { Name = "ecr-api-endpoint" }
}

resource "aws_vpc_endpoint" "ecr_dkr" {
  vpc_id              = data.aws_vpc.main.id
  service_name        = "com.amazonaws.${var.region}.ecr.dkr"
  vpc_endpoint_type   = "Interface"
  subnet_ids          = aws_subnets.private.ids
  security_group_ids  = [aws_security_group.fargate_sg.id]
  private_dns_enabled = true

  tags = { Name = "ecr-dkr-endpoint" }
}

# Gateway VPC Endpoint for S3
resource "aws_vpc_endpoint" "s3" {
  vpc_id            = data.aws_vpc.main.id
  service_name      = "com.amazonaws.${var.region}.s3"
  vpc_endpoint_type = "Gateway"
  route_table_ids   = [aws_route_table.private.id] # Replace with your private route table IDs

  tags = { Name = "s3-gateway-endpoint" }
}

# no ECS endpoint setting required for fargate task 
